{
  "require": {
    "prefix": "req",
    "body": [
      "require(\"${1:module}\")"
    ],
    "description": "require()"
  },
  "return": {
    "prefix": "rt",
    "body": [
      "return $0"
    ],
    "description": "return"
  },
  "assigment": {
    "prefix": "ll",
    "body": [
      "local ${1:varName} = ${0:value}"
    ],
    "description": "local x = 1"
  },
  "local": {
    "prefix": "l",
    "body": [
      "local ${0}"
    ],
    "description": "local x"
  },
  "locreq": {
    "prefix": "lreq",
    "body": [
      "local ${1:var} = require(\"${2:module}\")"
    ],
    "description": "local x = require()"
  },
  "class": {
    "prefix": "cl",
    "body": [
      "${1:className} = {}\n",
      "$1.${2:new} = function($3)",
      "\tlocal ${4:varName} = ${5:value}\n",
      "\t${6: --code}\n",
      "\treturn $4",
      "end"
    ],
    "description": "class"
  },
  "if": {
    "prefix": "if",
    "body": [
      "if ${1:true} then",
      "\t$0",
      "end"
    ],
    "description": "if"
  },
  "elseif": {
    "prefix": "elseif",
    "body": [
      "elseif ${1:true} then",
      "\t$0"
    ],
    "description": "elseif"
  },
  "else": {
    "prefix": "else",
    "body": [
      "else",
      "\t$0"
    ],
    "description": "else"
  },
  "for": {
    "prefix": "for",
    "body": [
      "for ${1:i}=${2:1},${3:10} do",
      "\t$0",
      "end"
    ],
    "description": "for x=1,n .."
  },
  "fori": {
    "prefix": "fori",
    "body": [
      "for i, ${1:x} in ipairs(${2:table}) do",
      "\t$0",
      "end"
    ],
    "description": "for .. ipairs()"
  },
  "forp": {
    "prefix": "forp",
    "body": [
      "for i, ${1:x} in pairs(${2:table}) do",
      "\t$0",
      "end"
    ],
    "description": "for .. pairs()"
  },
  "function": {
    "prefix": "fun",
    "body": [
      "function ${1:name}($2)",
      "\t${0:-- code}",
      "end"
    ],
    "description": "function"
  },
  "print": {
    "prefix": "p",
    "body": [
      "print(${0})"
    ],
    "description": "print()"
  },
  "self": {
    "prefix": "self:",
    "body": [
      "function self:${1:methodName}($2)",
      "\t$0",
      "end"
    ],
    "description": "function self:x()"
  },
  "while": {
    "prefix": "while",
    "body": [
      "while ${1:true} do",
      "\t$0",
      "end"
    ],
    "description": "while loop"
  },
  "pcall": {
    "prefix": "pcall",
    "body": [
      "pcall(${1:function})"
    ],
    "description": "pcall()"
  },
  "locpcall": {
    "prefix": "lpcall",
    "body": [
      "local ${1:status}, ${2:err_or_value} = pcall(${3:function})"
    ],
    "description": "local x, err = pcall()"
  }
}
